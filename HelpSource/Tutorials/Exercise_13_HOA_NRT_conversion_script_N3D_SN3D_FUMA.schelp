title:: HOA Tutorial Exercise 13
summary:: NRT conversion script between N3D, SN3D, and FuMa.
categories:: Libraries>HOA
related:: Guides/HOAguide, Tutorials/HOA_Tutorial_Overview


STRONG:: Previous:::
link::Tutorials/Exercise_12_HOA_NRT_using_scores_and_SynthDefs::

STRONG:: Next:::
link::Tutorials/Exercise_14_HOA_NRT_decoding_script::

The code below is a non-real-time NRT script to convert your b-format file between standard channel orders and normalization conventions.

First things first: let's start the sound server, which we configure first to get more audio buses and to have 36 output channels.

code::
s.quit; // quit the server first if it is still running with another configuration.
(
ServerOptions.devices;
s = Server.local;
Server.local = Server.default;
o = Server.local.options; // Get the local server's options
o.numInputBusChannels = 2; // Set Input to number of Inputs
o.numOutputBusChannels = 36; // lets start after chan 36 so as not to see the mic input
o.numAudioBusChannels = 2048;
o.blockSize = 512;
o.numWireBufs = 1024 * 16;
o.memSize = 2.pow(18);
o.sampleRate = 48000;
s.makeWindow;
s.boot;
)
::


We will first load a sound sample from a HOA scene.

First, load a soundfile:
code::
(
~order = 3; // al material is 3rd order
~hoaNumChannels = (~order+1).pow(2);
)
~hoaSoundScene = Buffer.read(s, HOA.soundsDir++"/eigen_ACN_N3D_Montreal_Metro_cello.wav");
~hoaSoundScene = Buffer.read(s, HOA.soundsDir++"/eigen_ACN_N3D_Montreal_Metro.wav");
~hoaSoundScene = Buffer.read(s, HOA.soundsDir++"/eigen_ACN_N3D_CIRMMT_Foyer_short.wav");
::


Then we make a Score and we add to the Score OSC messages invoking the SynthDef we have made earlier.
code::
(
var seconds; // length of sound file 2 convert
var informat; // input Format
var outformat; // output Format

informat =\ACN_N3D; //  examples from above are ACN_N3D
outformat =\FuMa; // \ACN_N3D; \ACN_SN3D;

seconds = ~hoaSoundScene.numFrames /  s.options.sampleRate; // length of the soundfile 2 convert
~myScore = Score.new();

Routine.run{
	// we need to load the soundfile to get the buffer number for the NRT server
~sndbufBundle = s.makeBundle(false, { ~sndbuf = Buffer.read(s, ~hoaSoundScene.path); });
~sndbufBundle = ~sndbufBundle.addFirst(0.0);
~myScore.add(~sndbufBundle);
~sndbuf.updateInfo;
s.sync;
   // we need to make the SynthDef that will do the conversion for us
SynthDef(\hoaConverter,{ arg buffer;
    var playFile;
	playFile = PlayBuf.ar(~hoaNumChannels.asInteger,  buffer, startPos:0, loop:0, doneAction:2);
	OffsetOut.ar(0, HOAConvert.ar(~order.asInteger, playFile, inFormat: informat, outFormat: outformat);)
}).load(s);
s.sync;

	// we need to load the SynthDef with the sound buffer that we want to convert
~noteBundle = s.makeBundle(false, {Synth(\hoaConverter, [\buffer, ~sndbuf])});
~noteBundle = ~noteBundle.addFirst(0.0);
~myScore.add(~noteBundle);
    //  at the end we need to set the command to stop NRT
~myScore.add([seconds, [\c_set, 0, 0]]); // finish
s.sync;

~myScore.score.do({|item,i| item.postln;  });
// Now we can start the NRT synthesis. We will configure the ServerOptions for the NRT server first.
// We render the file as float and normalize it once it is written to disk.

~nrtOptions = ServerOptions.new;
~nrtOptions.verbosity_(0);  // 0 to see the events as OSCPacket
~nrtOptions.numOutputBusChannels_(16); // we need 16 channels because it is B-format 3rd order
~nrtOptions.memSize_(8192 * 6400);
~nrtOptions.maxNodes_(1024 * 48);
~nrtOptions.maxSynthDefs_(1024 * 48);

Score.recordNRT(~myScore.score,
	            thisProcess.platform.userHomeDir++"/convertHOA-oscFile.txt",
	            thisProcess.platform.userHomeDir++"/convertHOA.wav",
	            sampleRate: 44100,
	            headerFormat: "WAV",
	            sampleFormat: "float",
	            options: ~nrtOptions,
	            action: {"DONE".postln;

		SoundFile.normalize(thisProcess.platform.userHomeDir++"/convertHOA.wav",
	                thisProcess.platform.userHomeDir++"/convertHOA_norm.wav",
	                newHeaderFormat: "WAV",
	                newSampleFormat: "int16");

	}
);

}
)
::


Finally, we can delete the files:
code::
File.delete( thisProcess.platform.userHomeDir++"/convertHOA-oscFile.txt");
File.delete( thisProcess.platform.userHomeDir++"/convertHOA.wav");
File.delete( thisProcess.platform.userHomeDir++"/convertHOA_norm.wav");
::


STRONG:: Previous:::
link::Tutorials/Exercise_12_HOA_NRT_using_scores_and_SynthDefs::

STRONG:: Next:::
link::Tutorials/Exercise_14_HOA_NRT_decoding_script::
